CassandraA
#4047

gurhan ‚Äî 01/28/2022
step8_ save image in HTML Class folder, name it sunnyday
Image
gurhan ‚Äî 01/28/2022
step 9 : pass image path
step 10 : adjust height
step 11 : add <hr>
<!DOCTYPE html>
<html>
    <head>
        <title>First Task</title>
    </head>
    <body>

        <h1>Breaking news!</h1>

        <h2>Weather forecast shows it will be sunny this weekend!</h2>

        <img src="sunnyday.jpeg" height="300">

        <hr>

        <p> <strong>Unless</strong>  the forecasting machine is <u>broken</u>, <em>finally</em>  the good weathers are here.</p>

        <p>Keep reading for further details.</p>

        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
        quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
        cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
        proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>

        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
        quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
        consequat. </p>

    </body>
</html>

gurhan ‚Äî 01/28/2022
all notes before noon
Friday, 28th, 2022

- What is front-end?
	- What user sees and interacts with is called front-end
	- UI = user interface
	- GUI = graphic user interface
Expand
message.txt
5 KB
    How to get path in different OS (MAC & WINDOWS):

    - If the file that we are trying to get the path of is inside of the same folder with the source, just the name and the extension of the file is good enought to pass as path.


    ex: sunnyday.jpeg is in the same file as our firstTask.html

        - Therefore just the name of the file is good enough as path.

    <img src="sunnyday.jpeg" height="300">


    - If they are not in the same file, we have to pass the full path (absolute path).


    How do we get the absolute path (full path):

    - MAC:

        First way:

        #1- Right click on the file
        #2- Click "Get Info"
        #3- Copy from "Where" section: /Users/cybertekchicago-1/Desktop/HTML Class


        Second way:
        #1- Right click on the file
        #2- Press and hold "option" button from keyboard
        #3- Select "Copy as path name"
        #4- Paste it where ever we need to use it.

    - WINDOWS:

        First way:
        #1- Right click on the file
        #2- Go to "Properties"
        #3- Go to "Security" tab from the top of the page
        #4- Copy path from there and paste where needed


        Second way:
        #1- Right click on the file
        #2- Go to "Properties"
        #3- Copy from the "Location" and paste in where ever needed
gurhan
 pinned
a message
 to this channel. See all
pinned messages
.
 ‚Äî 01/28/2022
gurhan ‚Äî 01/28/2022
https://www.mindtools.com/pages/article/forgetting-curve.htm
The Forgetting Curve: Why We Forget, and What We Can Do About It
The Forgetting Curve shows how fast we forget new information we learn. Discover strategies to prevent this and to improve your memory.
Image
gurhan ‚Äî 01/28/2022
Image
gurhan ‚Äî 01/28/2022
Image
gurhan ‚Äî 01/28/2022
<!DOCTYPE html>
<html>
    <head>
        <title></title>
    </head>
    <body>
Expand
myFirstPage.html
5 KB
gurhan ‚Äî 01/28/2022
NOTES SO FAR
Friday, 28th, 2022

ANNOUNCEMENTS:

- HTML QUIZ
- SELENIUM PROJECT CREATION (published in Canvas Test Automation Module)
Expand
message.txt
6 KB
gurhan ‚Äî 01/28/2022
<!DOCTYPE html>
<html>
	<head>
		<title></title>
	</head>
	<body>
Expand
message.txt
5 KB
gurhan ‚Äî 01/28/2022
        <table>

            <tr>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td></td>
                <td></td>
            </tr>

        </table>
gurhan ‚Äî 01/28/2022
all HTML code so far
<!DOCTYPE html>
<html>
	<head>
		<title></title>
	</head>
	<body bgcolor="lightblue">
Expand
myFirstPage.html
5 KB
gurhan ‚Äî 01/28/2022
<!DOCTYPE html>
<html>
	<head>
		<title></title>
	</head>
	<body bgcolor="lightblue">
Expand
message.txt
5 KB
gurhan ‚Äî 01/28/2022
all notes sofar
Friday, 28th, 2022

ANNOUNCEMENTS:

- HTML QUIZ
- SELENIUM PROJECT CREATION (published in Canvas Test Automation Module)
Expand
message.txt
7 KB
gurhan ‚Äî 01/28/2022
all codes so far
<!DOCTYPE html>
<html>
	<head>
		<title></title>
	</head>
	<body bgcolor="lightblue">
Expand
message.txt
5 KB
gurhan ‚Äî 01/28/2022
all notes from HTML CLASS 2
Friday, 28th, 2022

ANNOUNCEMENTS:

- HTML QUIZ
- SELENIUM PROJECT CREATION (published in Canvas Test Automation Module)
Expand
message.txt
8 KB
gurhan ‚Äî 02/01/2022
NOTES SO FAR
02/01/2022, Tuesday

HTML CLASS REVIEW:

- HTML : Hypertext markup language
Expand
message.txt
4 KB
gurhan ‚Äî 02/01/2022
@student üëã

Slides published here as a pdf: https://learn.cybertekschool.com/courses/633/files/52641?module_item_id=49223

Here I created a white background version if you want to use less toner when printing: https://learn.cybertekschool.com/courses/633/files/52642?module_item_id=49224
gurhan ‚Äî 02/01/2022
notes so far
02/01/2022, Tuesday

HTML CLASS REVIEW:

- HTML : Hypertext markup language
Expand
message.txt
4 KB
https://github.com/Cydeo-B25/SeleniumProject25
https://github.com/Cydeo-B25/SeleniumProject25/blob/master/src/test/java/com/cydeo/tests/
gurhan ‚Äî 02/01/2022
Image
Image
gurhan ‚Äî 02/01/2022
Image
gurhan ‚Äî 02/01/2022
Attachment file type: acrobat
Day1_Task1.pdf
62.38 KB
Task1_YahooTitleVerification
gurhan ‚Äî 02/01/2022
Yahoo | Mail, Weather, Search, Politics, News, Finance, Sports & Videos
gurhan ‚Äî 02/02/2022
all notes from yesterday's class
02/01/2022, Tuesday

HTML CLASS REVIEW:

- HTML : Hypertext markup language
Expand
message.txt
8 KB
also shared yesterday in canvas.
gurhan ‚Äî 02/02/2022
https://www.selenium.dev/documentation/
Selenium
The Selenium Browser Automation Project
Selenium automates browsers. That's it!

gurhan ‚Äî 02/03/2022
https://learn.cybertekschool.com/courses/633/files/52681?module_item_id=49254
warm up task for tomorrow
gurhan ‚Äî 02/04/2022
FEB 4TH, FRIDAY

TODAY'S SCHEDULE:
    - REVIEW
    - TASK SOLUTION
    - findElement()
    - Locators
    - getText()
    - getAttribute()

------------------------------------------------------------------------------

- What is Selenium?
    - Basically Selenium is a bunch of jar files that allows us to automate browsers.
    - In simple terms, selenium is bunch of jar files (libraries)
    - We use these jar files to automate browsers


- What is Maven?
    - Maven is a build automation tool.
    - Maven projects come with certain folder structure and pom.xml file

- What is a build?
    - Build is repeating steps when creating the projects
    - Build also includes the repeating steps when managing the project as well.

    -src
        - main
        - test
    - pom.xml

- What is pom.xml file?
    - It is short for "project object model".
    - pom.xml file is the most important file in a maven project.
    - We manage (add, remove, change version of) our dependencies.

- Is Maven for tester?
    - No. Maven is a tool created for developers.
    - As testers (SDETs) we will take advantage of some of its functionality.


- What version of Selenium we are using?
    - 3.141.59

- What version of WebDriverManager we are using?
    - 5.0.3

- If the developers are using both main and test folders, which folder the testers use?
    - Testers and developers are not working on the same project.
    - As SDET you will not have access to the source code.

- What is a dependency?
    - Dependencies are just jar files.
    - We add to pom.xml file and maven automatically downloads the version of the dependency we provide.

- Where do we get our expected data?
    - Requirement documents.

- Where do we get the actual data?
    - Comes from the browser. When we do our testing, we get actual data from browser.
day2_locators_getText_getAttribute
T1_CydeoVerifications
gurhan ‚Äî 02/04/2022
ALL NOTES BEFORE NOON
FEB 4TH, FRIDAY

TODAY'S SCHEDULE:
    - REVIEW
    - TASK SOLUTION
    - findElement()
Expand
message.txt
4 KB
gurhan ‚Äî 02/04/2022
apple - Google Search
gurhan ‚Äî 02/04/2022
all notes so far
FEB 4TH, FRIDAY

TODAY'S SCHEDULE:
	- REVIEW
	- TASK SOLUTION
	- findElement()
Expand
message.txt
6 KB
http://library2.cybertekschool.com/login.html
Login - Library
T4_LibraryLoginPage
 //TC #4: Library verifications
        //1. Open Chrome browser
        WebDriverManager.chromedriver().setup();
        WebDriver driver = new ChromeDriver();
        driver.manage().window().maximize();
        //2. Go to http://library2.cybertekschool.com/login.html
        driver.get("http://library2.cybertekschool.com/login.html");
        //3. Enter username: ‚Äúincorrect@email.com‚Äù
        //4. Enter password: ‚Äúincorrect password‚Äù
        //5. Click to Sign in button
        //6. Verify: visually ‚ÄúSorry, Wrong Email or Password‚Äù
        //displayed
gurhan ‚Äî 02/04/2022
all notes so far
FEB 4TH, FRIDAY

TODAY'S SCHEDULE:
	- REVIEW
	- TASK SOLUTION
	- findElement()
Expand
message.txt
7 KB
gurhan ‚Äî 02/04/2022
T5_getText_getAttribute
   //TC #5: getText() and getAttribute() method practice
        //1- Open a Chrome browser
        WebDriverManager.chromedriver().setup();
        WebDriver driver = new ChromeDriver();
        driver.manage().window().maximize();
        //2- Go to: https://practice.cydeo.com/registration_form
        driver.get("https://practice.cydeo.com/registration_form");

        //3- Verify header text is as expected:
        //Expected: Registration form
        //4- Locate ‚ÄúFirst name‚Äù input box
        //5- Verify placeholder attribute‚Äôs value is as expected: Expected: first name
gurhan ‚Äî 02/04/2022
all notes from today
FEB 4TH, FRIDAY

TODAY'S SCHEDULE:
	- REVIEW
	- TASK SOLUTION
	- findElement()
Expand
message.txt
7 KB
@student I shared some HomeWork. Please take some time off before working on them. Don't be too harsh to yourself! See you guys later!:)
Image
gurhan ‚Äî Today at 7:48 AM
ALL NOTES FROM REVIEW
Today's schedule:
	#1- Review
	#2- Task1-2
	#3- Create utility class
	#4- Task
	#5- .isDisplayed()
Expand
message.txt
5 KB
Ôªø
Today's schedule:
	#1- Review
	#2- Task1-2
	#3- Create utility class
	#4- Task
	#5- .isDisplayed()
	#6- cssSelector
	#7- xpath

------------------------------------------------------------

- What is maven?
- Maven is build automation tool.

- What is build?
- Repeated steps when creating the project and also managing the project.
- such as; creating the folder structure, adding dependencies, managing dependencies, compiling, deploying...

- Is maven for testers? Was it created for testers?
- No. It is a developer tool. We use it to take advantage of some of its functionalities.

- Is maven the only "build automation tool" out there?
- No. Ant, Gradle

- .findElement(By.locator("STRING"))

- What does it do?
- Finds and returns a single web element.

- What does it accept as argument?
- It accepts locator parameter as String.

- What is the return type?
- WebElement type: comes from Selenium library.

- What kind of exception does it throw?
- It will throw NoSuchElementException if it cannot somehow find given web element.

- What happens when exception is thrown in Selenium code execution? Is it going to execute the rest of the lines?
- Once it throws the exception, the rest of the lines will not be executed UNLESS we handle it.

- When do we have NoSuchElementException?
#1- Wrong locator provided
#2- Synchronization: when browser driver and browser are not on the same page, driver will try to find a web element that is not loaded yet.
If this happens, it will throw NoSuchElementException.

- .click();
- What does it do?
- It clicks to the given web element.

- Does it accept argument?
- No.

- Does it work just by itself --> driver.click();
- driver.findElement(locator).click();


- .sendKeys();
- What does it do?
- It will pass the provided string into given WebElement.

- Does it accept argument?
- Yes. It accepts String argument.
- We can pass Keys. commands into sendKeys() method as well.

- Keys.ENTER:
- This piece of code will imitate user pressing ENTER from keyboard.

LOCATORS:

- How many total locators we have?
- Selenium has total of 8 locators.

- id
- name
- className
- linkText
- partialLinkText
- tagName

- cssSelector
- xpath


<a href="https://tesla.com" name="uh68" class="ff58" id="bb22"> TESLA CYBERTRUCK </a>


1- id:
	- It will find and return the web element that has matching id attribute value
	- "id" is always unique.

ex: <a href="https://tesla.com" name="uh68" class="ff58" id="bb22"> TESLA CYBERTRUCK </a>

syntax: driver.findElement(By.id("bb22"))

2- name:
	- It will find and return the web element that has matching name attribute value
	- "name" is NOT always unique

ex: <a href="https://tesla.com" name="uh68" class="ff58" id="bb22"> TESLA CYBERTRUCK </a>
syntax: driver.findElement(By.name("uh68"))

3- className:
	- It will find and return the web element that has matching class attribute value
	- "class" is NOT always unique

ex: <a href="https://tesla.com" name="uh68" class="ff58" id="bb22"> TESLA CYBERTRUCK </a>
syntax: driver.findElement(By.className("ff58"))


4- linkText:
	- It will look through all of the LINKS in the HTML page and return FIRST matching result.
	- It ONLY ONLY ONLY works with links (<a> tags)
	- It works similar to .equals method in java.
	- It is looking for exact String match.

ex: <a href="https://tesla.com" name="uh68" class="ff58" id="bb22"> TESLA CYBERTRUCK </a>
syntax: driver.findElement(By.linkText("TESLA CYBERTRUCK"));

5- partialLinkText
	- It will look through all of the LINKS in the HTML page and return FIRST matching result.
	- It ONLY ONLY ONLY works with links (<a> tags)
	- It works similar to .contains method in java.
	- It is looking for PARTIAL String match.

ex: <a href="https://tesla.com" name="uh68" class="ff58" id="bb22"> TESLA CYBERTRUCK </a>
syntax1: driver.findElement(By.partialLinkText("TESLA CYBERTRUCK"));
syntax2: driver.findElement(By.partialLinkText("CYBERTRUCK"));
syntax3: driver.findElement(By.partialLinkText("TESLA"));
syntax4: driver.findElement(By.partialLinkText("ESLA"));

6- tagName:
- This locator locates using given TAG NAME.
- We literally pass the TAG name as String parameter.
- It will find and return first matching result.

ex: <a href="https://tesla.com" name="uh68" class="ff58" id="bb22"> TESLA CYBERTRUCK </a>
syntax1: driver.findElement(By.tagName("a"));

- What happens if we provide id,name,class attribute value and there is more than 1 result?
- It will find and return the first matching result.

- .getText();
- What does it do?
- It will get the content from in between the opening tag and closing tag

- What is the return type?
- String

- Does it accept any argument?
- No.

syntax: We cannot say driver.getText();
- driver.findElement(locator).getText(); --> it will return the text of given web element

ex: <a href="https://tesla.com" name="uh68" class="ff58" id="bb22"> TESLA CYBERTRUCK </a>

syntax: driver.findElement(By.name("uh68")).getText() --> TESLA CYBERTRUCK

- .getAttribute();
- What does it do?
- It will accept an attribute and return its value.
- It accepts a String argument
- Return type is String

ex: <a href="https://tesla.com" name="uh68" class="ff58" id="bb22"> TESLA CYBERTRUCK </a>

syntax: driver.findElement(By.name("uh68")).getAttribute("href") 	--> https://tesla.com
syntax: driver.findElement(By.name("uh68")).getAttribute("name") 	--> uh68
syntax: driver.findElement(By.name("uh68")).getAttribute("class") 	--> ff58
syntax: driver.findElement(By.name("uh68")).getAttribute("id") 		--> bb22


-----------------------------------------------------------------------------

- .isDisplayed():

- What does it do?
- It returns boolean value on a given web element.

- If web element is displayed, it will return "true"
- If web element is not displayed, it will return "false"

- It does not accept any argument.

- syntax: driver.findElement(locator).isDisplayed(); --> true, if displayed
- syntax: driver.findElement(locator).isDisplayed(); --> false, if not displayed

-----------------------------------------------------------------------------

- cssSelector locator:
	- cssSelector is one of 8 locators from Selenium library.
	- cssSelector allows us to create custom locators.
	- we are able to locate web elements with any attribute value.
	- we are not just limited to name, id, className
	- we can use any custom attribute we see on a web element

	syntax#1: tagName[attribute='value']
	syntax#1: tagName[attribute="value"]

ex:	<label class="login-item-checkbox-label" for="USER_REMEMBER">Remember me on this computer</label>

cssSelector practice #1- Locate "label" using "class" attribute

	tagName[attribute='value']

	label[class='login-item-checkbox-label']


cssSelector practice #2- Locate "label" using "for" attribute

	tagName[attribute='value']

	label[for='USER_REMEMBER']



ex#2: ex: <a href="https://tesla.com" name="uh68" class="ff58" id="bb22"> TESLA CYBERTRUCK </a>

#1- locate above link using cssSelector, using name:

	tagName[attribute='value']
	a[name='uh68']

#2- locate above link using cssSelector, using id:

	a[id='bb22']

#3- locate above link using cssSelector, using class:

	a[class='ff58']

#4- locate above link using cssSelector, using href:

	a[href='https://tesla.com']


- cssSelector has another syntax, but it works with id and class attributes only.

- . stands for class attribute
- # stands for id attribute

syntax#2:

	tagName.classValue
	tagName#idValue


ex#3: ex: <a href="https://tesla.com" name="uh68" class="ff58" id="bb22"> TESLA CYBERTRUCK </a>

	tagName.classValue ---> a.ff58

	tagName#idValue --> a#bb22

-----------------------------------------------------------------------------

- XPATH LOCATORS
	- xpath is one of 8 locators of Selenium
	- xpath allows us to create custom locators using provided attributes and their values
	- we can also use the text of the provided web element to create locators

	- XPATH has 2 different types

Interview question: What is the difference between absolute xpath and relative xpath?

#1- ABSOLUTE XPATH:
	- Absolute xpath starts with single slash "/"
	- It starts looking in html from the root/parent element : html element
	- It starts from html tag, and it goes down 1 by 1 until we reach to the web element we are looking for
	- This is not good way of locating a web element.
	- It will break with any minimal change in the html code.

	/html/body/table/tbody/tr[2]/td/div/div/form/div[4]/button

#2- RELATIVE XPATH
	- Relative xpath starts with double slash "//"
	- "//" means you can start from anywhere in the HTML code
	- Since we are allowed to start from anywhere in the HTML code, relative xpath is very dependable
	- We will use relative xpath, not absolute xpath
	- The only time your relative xpath is breaking (not working) is when/if the developer is specifically changing the attribute value we used


--> MAIN SYNTAX: //tagName[@attribute='value']


ex: <a href="https://tesla.com" name="uh68" class="ff58" id="bb22"> TESLA CYBERTRUCK </a>


-->			 //tagName[@attribute='value']

- locate above <a> tag using relative xpath locator with different attributes.

	- using name attribute 		: //a[@name='uh68']
	- using class attribute 	: //a[@class='ff58']
	- using id attribute 		: //a[@id='bb22']


COMMONLY USED XPATH SYNTAXES:

#1- //tagName[@attribute='value']
#2- //tagName[contains(@attribute, 'value')]
#3- //tagName[.='text']  same as //tagName[text()='text']
#4- //*[@attribute='value']


EXPLANATIONS:
#1- //tagName[@attribute='value']

	We are saying, get me the given tag with provided attribute and value

#2- //tagName[contains(@attribute, 'value')]

	We are saying, get me the given tag that has the attribute which contains the value in the locator

	Looks for the tagName that has matching or containing attribute value

#3- //tagName[.='text']

	This locator will return the web element with given text

#4- //*[@attribute='value']

	We are saying, we do not care about which tagName, return us the web element with matching attribute and value result


 chro path'
 chrome developer tool : right click > copy > copy selector --> cssSelector
 chrome developer tool : right click > copy > copy xpath --> relative xpath
 chrome developer tool : right click > copy > copy full xpath --> absolute xpath


- I do not suggest using any tools unless for just seeing example purpose.